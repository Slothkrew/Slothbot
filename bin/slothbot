#!/usr/bin/env ruby
#
# slothbot
# sloth bot best bot

require 'json'
require 'cinch'
require 'slothbot'

wheel = Slothbot::Modules::Wheel.new
currency = Slothbot::Modules::Currency.new
links = Slothbot::Modules::URLs.new "/home/sjums/code/Slothbot/urls.db"
slothbot = Slothbot::Bot.new
slothbot.load_module currency
slothbot.load_module wheel
slothbot.load_module links
slothbot.bind_command :convert, currency, :convert
slothbot.bind_command :wheel, wheel, :wheel
slothbot.bind_command :url, links, :url

bot = Cinch::Bot.new do
  configure do |c|
    config_file = "/home/sjums/code/Slothbot/config.json"
    options = File.read(config_file)
    options = JSON.parse(options)

    c.server = options['server'] unless options['server'].nil?
    c.port = options['port'] unless options['port'].nil?
    c.user = options['user'] unless options['user'].nil?
    c.nick = options['nick'] unless options['nick'].nil?
    c.password = options['password'] unless options['password'].nil?
    c.ssl.use = options['ssl.use'] unless options['ssl.use'].nil?
    c.channels = options['channels'] unless options['channels'].nil?
    
    #raise NotImplementedError.new "configure this; refer to cinch docs"
  end

  on :message do |m|
    if m.message[0] == '!'
      args = m.message.split
      command = args.shift[1..-1].to_sym
      if slothbot.bound_command? command
        m.reply slothbot.run_command command, { :from => m.user.to_s }, *args
      end
    end
  end
end

bot.start

