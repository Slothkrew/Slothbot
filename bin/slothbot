#!/usr/bin/env ruby
#
# slothbot
# sloth bot best bot

require 'json'
require 'cinch'
require 'slothbot'

wheel = Slothbot::Modules::Wheel.new
currency = Slothbot::Modules::Currency.new
links = Slothbot::Modules::URLs.new  # PATH TO SQLITE DATABASE
points = Slothbot::Modules::Points.new  # PATH TO SQLITE DATABASE
#reddit = Slothbot::Modules::Reddit.new

slothbot = Slothbot::Bot.new
slothbot.load_module currency
slothbot.load_module wheel
slothbot.load_module links
slothbot.load_module points
#slothbot.load_module reddit

slothbot.bind_command :convert, currency, :convert
slothbot.bind_command :wheel, wheel, :wheel
slothbot.bind_command :url, links, :url
slothbot.bind_command :award, points, :award

bot = Cinch::Bot.new do
  configure do |c|
    config_file = # PATH TO JSON CONFIG FILE
    options = File.read(config_file)
    options = JSON.parse(options)

    c.server = options['server'] unless options['server'].nil?
    c.port = options['port'] unless options['port'].nil?
    c.user = options['user'] unless options['user'].nil?
    c.nick = options['nick'] unless options['nick'].nil?
    c.password = options['password'] unless options['password'].nil?
    c.ssl.use = options['ssl.use'] unless options['ssl.use'].nil?
    c.channels = options['channels'] unless options['channels'].nil?
  end

  on :message do |m|
    reg = /\/r\/[a-z0-9]+/i
    if m.message[0] == '!' || m.message =~ reg #reddit.subreddit_reg
      args = m.message.split
      command = args.shift[1..-1].to_sym
      if slothbot.bound_command? command
        users = bot.channels.collect { |channel| channel.users.each_key.collect { |user| user.nick } }[0]
        #puts "\nUsers:\n"
        #puts users.inspect + "\n"
        m.reply slothbot.run_command command, { :from => m.user.to_s, :users => users }, *args
      else
        sub = reg.match(m.message)[0]
        m.reply "For the lazy: https://reddit.com#{sub}"
      end
    end
  end
end

bot.start

